update.packages(ask = FALSE)
library(tidyverse)
library(dplyr)
library(ggpubr)
library(ggplot2)
library(ggpmisc)
library(tidyverse)
library(ggplot2)
# Master data set
master <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Environmental_Data/Environmental_Data_Merged.csv')
A <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Environmental_Data/21741107-A_7.5.23.csv',skip = 1) %>%
.[,c(1:4)]
colnames(A)[2] ="datetime"
colnames(A)[3] ="temp"
colnames(A)[4] ="light"
B <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Environmental_Data/21741109-B_7.5.23.csv',skip = 1) %>%
.[,c(1:4)]
colnames(B)[2] ="datetime"
colnames(B)[3] ="temp"
colnames(B)[4] ="light"
C <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Environmental_Data/21741108-C_7.5.23.csv',skip = 1) %>%
.[,c(1:4)]
colnames(C)[2] ="datetime"
colnames(C)[3] ="temp"
colnames(C)[4] ="light"
merged <- full_join(A[,2:4],B[,2:4], by="datetime",suffix = c(".a", ".b"))
merged <- full_join(merged,C[,2:4], by="datetime",suffix = c(".c", ".c"))
# clean ends
merged_clean <- merged[-c(1:12,1449:1456),]          #####
appended <- rbind(master, merged_clean)
# write csv
write.csv(appended, '~/Desktop/GITHUB/TL_Astrangia/Environmental_Data/Environmental_Data_Merged.csv')
# Load sym Data file into R
sym <- read.csv('~/Desktop/R_Practice_Files/TL_Trans_Practice_sym.csv')
# Load chl Data file into R
chl <- read.csv('~/Desktop/R_Practice_Files/TL_Trans_Practice_chl.csv')
# Use the merge command to join the two data sets together
join <- merge(chl,sym)
View(join)
OFAV <- join %>% filter(full_treatment=="OFAV_PP")
View(OFAV)
View(join)
join %>% filter(full_treatment=="OFAV_PP") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point()
join %>% filter(full_treatment=="OFRA_PP") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point()
join %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point()
join %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_smooth()
join %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_line()
join %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_smooth(method=lm)
# Use the merge command to join the two data sets together
joined <- merge(chl,sym)
ggplot()
joined %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_smooth(method=lm)
summarise(joined,)
lm(sym.cm2~chla.ug.cm2, data=joined)
lm(formula = sym.cm2~chla.ug.cm2, data=joined)
lm1 <- lm(formula = sym.cm2~chla.ug.cm2, data=joined)
summarise(lm1)
lm(formula = sym.cm2~chla.ug.cm2, data=joined)
lm(formula = sym.cm2~chla.ug.cm2+full_treatment, data=joined)
summary(lm1)
# Filter full data set to only include  OFAV_SS samples
joined %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_smooth(method=lm)
# create a scatter plot comparing symbiont and chl
# also add a line using the geom_smooth() command using lm as the method
joined %>%
ggplot(.,aes(sym.cm2,chla.ug.cm2)) +
geom_point() +
geom_smooth(method=lm)
View(joined)
ggplot(joined, aes(sym.cm2,species)) +
geom_bar()
View(joined)
ggplot(joined, aes(sym.cm2,species)) +
geom_boxplot()
OFAV_only <- filter(joined, by==c("OFAV_PP","OFAV_SS"))
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFAV_SS"))
View(OFAV_only)
ggplot(joined, aes(species,sym.cm2)) +
geom_boxplot()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity')
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity') +
geom_errorbar()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity')
()
ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot()
ggplot(OFAV_only, aes(full_treatment,sym.cm2)) +
geom_boxplot()
summarise(OFAV_only)
summarise(OFAV_only, mean(chla.ug.cm2))
OFAV_only %>%
grouby(full_treatment) %>%
summarise(., mean(chla.ug.cm2))
OFAV_only %>%
group_by(full_treatment) %>%
summarise(., mean(chla.ug.cm2))
OFAV_only %>%
t.test(full_treatment,chla.ug.cm2)
#library(tidyverse)
#library(dplyr)
library(ggpubr)
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity') +
stat_compare_means()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,chla.ug.cm2)) +
geom_bar(stat='identity') +
stat_compare_means()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity') +
stat_compare_means()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFRA_SS"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm)) +
geom_boxplot()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFRA_SS"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm)) +
geom_boxplot()
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm2)) +
geom_boxplot()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFRA_PP"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm2)) +
geom_boxplot()
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm2)) +
geom_boxplot() +
stat_compare_means()
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,chl.ug.cm2)) +
geom_boxplot() +
stat_compare_means()
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFAV_SS"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means()
OFAV_only %>%
group_by(full_treatment) %>%
summarise(., mean(chla.ug.cm2))
joined %>%
group_by(full_treatment) %>%
summarise(., mean(c(chla.ug.cm2,sym.cm2)))
write_csv(joined, '~/Desktop/newfile.csv')
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(c(chla.ug)))
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(c(chla.ug)))
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(chla.ug))
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(chla.ug.cm2))
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(sym.cm2))
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity')
# calculate the p-value on the bar graph using the command stat_compare_means()
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity') +
stat_compare_means()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFAV_SS"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means()
# generate a boxplot of the new dataframe with full_treatment for x and chla for Y
# also add stat_compare_means() to your graph to calculate pvalue
plot <- ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means() +
labs(y= "Chlorophyl a (ug/cm2)", x = "Treatment")
# generate a boxplot of the new dataframe with full_treatment for x and chla for Y
# also add stat_compare_means() to your graph to calculate pvalue
plot1 <- ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means() +
labs(y= "Chlorophyl a (ug/cm2)", x = "Treatment")
# Make your graph as perfect/pretty as you can. Fix the axes titles, play with colors, whatever you want
# Save your graph as a jpg to your computer using the ggsave() function. In order for this to work you have to save your ggplot as an item.
ggsave("plot1.jpg", plot = plot1 , path = '~/Desktop/TL_Trans_Results/', width = 6,
height = 6)
# Make your graph as perfect/pretty as you can. Fix the axes titles, play with colors, whatever you want
# Save your graph as a jpg to your computer using the ggsave() function. In order for this to work you have to save your ggplot as an item.
ggsave("plot1.jpg", plot = plot1 , path = '~/Desktop/', width = 6,
height = 6)

merged <- full_join(merged,C[,2:4], by="datetime",suffix = c(".c", ".c"))
# clean ends
merged_clean <- merged[-c(1:12,1449:1456),]          #####
appended <- rbind(master, merged_clean)
# write csv
write.csv(appended, '~/Desktop/GITHUB/TL_Astrangia/Environmental_Data/Environmental_Data_Merged.csv')
# Load sym Data file into R
sym <- read.csv('~/Desktop/R_Practice_Files/TL_Trans_Practice_sym.csv')
# Load chl Data file into R
chl <- read.csv('~/Desktop/R_Practice_Files/TL_Trans_Practice_chl.csv')
# Use the merge command to join the two data sets together
join <- merge(chl,sym)
View(join)
OFAV <- join %>% filter(full_treatment=="OFAV_PP")
View(OFAV)
View(join)
join %>% filter(full_treatment=="OFAV_PP") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point()
join %>% filter(full_treatment=="OFRA_PP") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point()
join %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point()
join %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_smooth()
join %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_line()
join %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_smooth(method=lm)
# Use the merge command to join the two data sets together
joined <- merge(chl,sym)
ggplot()
joined %>% filter(full_treatment=="OFAV_SS") %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_smooth(method=lm)
summarise(joined,)
lm(sym.cm2~chla.ug.cm2, data=joined)
lm(formula = sym.cm2~chla.ug.cm2, data=joined)
lm1 <- lm(formula = sym.cm2~chla.ug.cm2, data=joined)
summarise(lm1)
lm(formula = sym.cm2~chla.ug.cm2, data=joined)
lm(formula = sym.cm2~chla.ug.cm2+full_treatment, data=joined)
summary(lm1)
# Filter full data set to only include  OFAV_SS samples
joined %>%
ggplot(.,aes(chla.ug.cm2,sym.cm2)) +
geom_point() +
geom_smooth(method=lm)
# create a scatter plot comparing symbiont and chl
# also add a line using the geom_smooth() command using lm as the method
joined %>%
ggplot(.,aes(sym.cm2,chla.ug.cm2)) +
geom_point() +
geom_smooth(method=lm)
View(joined)
ggplot(joined, aes(sym.cm2,species)) +
geom_bar()
View(joined)
ggplot(joined, aes(sym.cm2,species)) +
geom_boxplot()
OFAV_only <- filter(joined, by==c("OFAV_PP","OFAV_SS"))
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFAV_SS"))
View(OFAV_only)
ggplot(joined, aes(species,sym.cm2)) +
geom_boxplot()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity')
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity') +
geom_errorbar()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity')
()
ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot()
ggplot(OFAV_only, aes(full_treatment,sym.cm2)) +
geom_boxplot()
summarise(OFAV_only)
summarise(OFAV_only, mean(chla.ug.cm2))
OFAV_only %>%
grouby(full_treatment) %>%
summarise(., mean(chla.ug.cm2))
OFAV_only %>%
group_by(full_treatment) %>%
summarise(., mean(chla.ug.cm2))
OFAV_only %>%
t.test(full_treatment,chla.ug.cm2)
#library(tidyverse)
#library(dplyr)
library(ggpubr)
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity') +
stat_compare_means()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,chla.ug.cm2)) +
geom_bar(stat='identity') +
stat_compare_means()
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity') +
stat_compare_means()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFRA_SS"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm)) +
geom_boxplot()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFRA_SS"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm)) +
geom_boxplot()
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm2)) +
geom_boxplot()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFRA_PP"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm2)) +
geom_boxplot()
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,sym.cm2)) +
geom_boxplot() +
stat_compare_means()
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,chl.ug.cm2)) +
geom_boxplot() +
stat_compare_means()
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFAV_SS"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means()
OFAV_only %>%
group_by(full_treatment) %>%
summarise(., mean(chla.ug.cm2))
joined %>%
group_by(full_treatment) %>%
summarise(., mean(c(chla.ug.cm2,sym.cm2)))
write_csv(joined, '~/Desktop/newfile.csv')
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(c(chla.ug)))
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(c(chla.ug)))
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(chla.ug))
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(chla.ug.cm2))
# use the group_by() function to group the data by the 'full_treatment' column
# use the summarise() function to find the chl means
joined %>%
group_by(full_treatment) %>%
summarise(., mean(sym.cm2))
# Make a boxplot with species on x and symbiont density on y
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity')
# calculate the p-value on the bar graph using the command stat_compare_means()
ggplot(joined, aes(species,sym.cm2)) +
geom_bar(stat='identity') +
stat_compare_means()
# filter to only have OFAV
OFAV_only <- filter(joined, full_treatment==c("OFAV_PP","OFAV_SS"))
# generate a boxplot of the two
ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means()
# generate a boxplot of the new dataframe with full_treatment for x and chla for Y
# also add stat_compare_means() to your graph to calculate pvalue
plot <- ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means() +
labs(y= "Chlorophyl a (ug/cm2)", x = "Treatment")
# generate a boxplot of the new dataframe with full_treatment for x and chla for Y
# also add stat_compare_means() to your graph to calculate pvalue
plot1 <- ggplot(OFAV_only, aes(full_treatment,chla.ug.cm2)) +
geom_boxplot() +
stat_compare_means() +
labs(y= "Chlorophyl a (ug/cm2)", x = "Treatment")
# Make your graph as perfect/pretty as you can. Fix the axes titles, play with colors, whatever you want
# Save your graph as a jpg to your computer using the ggsave() function. In order for this to work you have to save your ggplot as an item.
ggsave("plot1.jpg", plot = plot1 , path = '~/Desktop/TL_Trans_Results/', width = 6,
height = 6)
# Make your graph as perfect/pretty as you can. Fix the axes titles, play with colors, whatever you want
# Save your graph as a jpg to your computer using the ggsave() function. In order for this to work you have to save your ggplot as an item.
ggsave("plot1.jpg", plot = plot1 , path = '~/Desktop/', width = 6,
height = 6)
x <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_hobo_21706002-X_2023-09-29.csv')
z <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_hobo_21706004-Z_2023-09-29.csv')
library(tidyverse)
#library(dplyr)
#library(ggpubr)
library(ggplot2)
x <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_hobo_21706002-X_2023-09-29.csv')
x <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_hobo_21706002-X-2023-09-29.csv')
x <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_hobo_21706002-X_2023-09-29.csv')
z <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_hobo_21706004-Z_2023-09-29.csv')
merged <- rbind(x,z)
in_water <- merged %>%
filter(.$Date.Time..EDT. >= "09/22/2023 10:00:00") %>%
filter(.$Date.Time..EDT. <= "09/22/2023 12:30:00")
# Temp graph
ggplot(in_water, aes(x= Date.Time..EDT., y=Ch.1...Temperature.....C.)) +
geom_point()
# light graph
ggplot(in_water, aes(x= Date.Time..EDT., y=Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/22/2023 12:01:00") %>%
filter(.$Date.Time..EDT. <= "09/22/2023 12:04:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) %>%
filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 8:49:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 8:52:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 08:49:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 08:52:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 08:49:30") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 08:52:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 08:53:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 08:54:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:01:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:03:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:01:30") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:03:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:01:50") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:03:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:04:50") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:09:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:04:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:09:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:05:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:09:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:06:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:09:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:07:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:09:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:09:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:13:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:09:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:10:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:09:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:11:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:09:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:10:30") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:15:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:18:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:16:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:18:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:16:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:17:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:15:50") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:16:50") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:15:40") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:16:40") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:15:30") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:16:40") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:15:40") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:16:40") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:13:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:19:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:15:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:19:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:16:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:19:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:17:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:19:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:19:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:23:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
new <- merged %>%
filter(.$Date.Time..EDT. >= "09/29/2023 09:21:00") %>%
filter(.$Date.Time..EDT. <= "09/29/2023 09:23:00") %>%
mutate(zscore = (.$Ch.2...Light....lux. - mean(.$Ch.2...Light....lux.))/sd(.$Ch.2...Light....lux.)) # %>% filter(abs(zscore)<2) #%>% filter(Ch.2...Light....lux. >= 3000)
ggplot(new, aes(x= Date.Time..EDT., y=new$Ch.2...Light....lux.)) +
geom_point()
mean(new$Ch.2...Light....lux.)
mean(new$Ch.1...Temperature.....C.)
# once the data has been entered for today, merge it to the master
raw <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_data_raw_2023-9-29.csv') %>%
filter(quality_control == "good") %>%
select(date,algae,corrected_depth,mean_sym,mean_apo,light,temp)
View(raw)
# load in master
master <- read.csv('~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_data_raw_master.csv')%>%
select(!X)
# merge step
merged<- rbind(master,raw)
View(merged)
# write it
write.csv(merged, '~/Desktop/GITHUB/TL_Astrangia/Quadrat_Sampling/quad_data_raw_master.csv')
# graph for light
ggplot(merged) +
geom_point(aes(x=corrected_depth,y=light,color=date)) +
geom_smooth(aes(x=corrected_depth,y=light))
# graph for light
ggplot(merged) +
geom_point(aes(x=corrected_depth,y=light)) +
geom_smooth(aes(x=corrected_depth,y=light))
# apo sym
ggplot(merged) +
geom_point(aes(x=corrected_depth,y=mean_apo)) +
geom_smooth(aes(x=corrected_depth,y=mean_apo))+
geom_point(aes(x=corrected_depth,y=mean_sym), color = "red") +
geom_smooth(aes(x=corrected_depth,y=mean_sym), color = "red") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA))
# algae
ggplot(merged) +
geom_point(aes(x=algae,y=mean_apo)) +
geom_smooth(aes(x=algae,y=mean_apo))+
geom_point(aes(x=algae,y=mean_sym), color = "red") +
geom_smooth(aes(x=algae,y=mean_sym), color = "red") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA))
# algae
ggplot(merged) +
geom_point(aes(x=algae,y=mean_apo)) +
geom_smooth(aes(x=algae,y=mean_apo))+
geom_point(aes(x=algae,y=mean_sym), color = "red") +
geom_smooth(aes(x=algae,y=mean_sym), color = "red") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA))
ggplot(merged)+
geom_point(aes(x=corrected_depth, y=algae)) +
geom_smooth(aes(x=corrected_depth, y=algae))
ggplot(merged)+
geom_point(aes(x=corrected_depth, y=algae)) +
geom_smooth(aes(x=corrected_depth, y=algae, span = 5))
ggplot(merged)+
geom_point(aes(x=corrected_depth, y=algae)) +
geom_smooth(aes(x=corrected_depth, y=algae, span = 10))
ggplot(merged)+
geom_point(aes(x=corrected_depth, y=algae)) +
geom_smooth(aes(x=corrected_depth, y=algae, method = "lm"))
ggplot(merged)+
geom_point(aes(x=corrected_depth, y=algae)) +
geom_smooth(aes(x=corrected_depth, y=algae))
ggplot(merged)+
geom_point(aes(x=corrected_depth, y=algae)) +
geom_smooth(aes(x=corrected_depth, y=algae)) +
geom_line()
ggplot(merged)+
geom_point(aes(x=corrected_depth, y=algae)) +
geom_smooth(aes(x=corrected_depth, y=algae))
# apo sym
ggplot(merged) +
geom_point(aes(x=corrected_depth,y=mean_apo)) +
geom_smooth(aes(x=corrected_depth,y=mean_apo))+
geom_point(aes(x=corrected_depth,y=mean_sym), color = "red") +
geom_smooth(aes(x=corrected_depth,y=mean_sym), color = "red") +
scale_y_continuous(expand = c(0, 0), limits = c(0, NA))
